@model LoginViewModel
@inject SignInManager<ApplicationUser> SignInManager

@{
    ViewData["Title"] = "Login";
}

<form method="post" asp-controller="Account" asp-action="Login" asp-route-returnurl="@Model.ReturnUrl" novalidate="novalidate">
    <h1>@ViewData["Title"]</h1>
    <div class="form-group">
        <input id="username" class="form-control" asp-for="Email" placeholder="@Html.DisplayNameFor(x => x.Email)" />
    </div>
    <div class="form-group">
        <input id="password" class="form-control" asp-for="Password" placeholder="@Html.DisplayNameFor(x => x.Password)" />
    </div>
    <div asp-validation-summary="All" class="form-group text-danger"></div>
    <div class="form-group row">
        <div class="col-xs-6 checkbox">
	    <label asp-for="RememberMe">
	        <input asp-for="RememberMe" />
	        @Html.DisplayNameFor(m => m.RememberMe)
	    </label>
        </div>
        <div class="col-xs-6 forgot-password">
            <a asp-action="ForgotPassword" asp-route-returnurl="@Model.ReturnUrl">Forgot password?</a>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" id="login" class="btn btn-primary">Login</button>
    </div>

    @if (string.IsNullOrEmpty(Model.ClientId) || Model.ClientId == "ResponsiveInsight")
    {
        <p>Don't have an account? <a asp-action="Register" asp-route-returnurl="@Model.ReturnUrl">Sign Up Now</a></p>
    }
   
 </form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
